#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–µ–π –¢–∏–Ω—å–∫–æ—Ñ—Ñ ‚Üí Supabase
"""

import os
import subprocess
import sys
from datetime import datetime


def install_daily_sync():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏"""
    print("üîß –£–°–¢–ê–ù–û–í–ö–ê –ï–ñ–ï–î–ù–ï–í–ù–û–ô –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò")
    print("="*60)
    
    plist_file = "com.daily.sync.tinkoff.supabase.plist"
    launch_agents_dir = os.path.expanduser("~/Library/LaunchAgents")
    target_path = os.path.join(launch_agents_dir, plist_file)
    
    try:
        # –ö–æ–ø–∏—Ä—É–µ–º plist —Ñ–∞–π–ª
        subprocess.run(["cp", plist_file, target_path], check=True)
        print(f"‚úÖ –§–∞–π–ª —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ {target_path}")
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º LaunchAgent
        subprocess.run(["launchctl", "load", target_path], check=True)
        print("‚úÖ LaunchAgent –∑–∞–≥—Ä—É–∂–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
        result = subprocess.run(["launchctl", "list"], capture_output=True, text=True)
        if "com.daily.sync.tinkoff.supabase" in result.stdout:
            print("‚úÖ –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∞–∫—Ç–∏–≤–Ω–∞")
            print("üïò –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞: –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 09:00")
        else:
            print("‚ö†Ô∏è LaunchAgent –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ")
        
        return True
        
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏: {e}")
        return False


def uninstall_daily_sync():
    """–£–¥–∞–ª–µ–Ω–∏–µ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏"""
    print("üóëÔ∏è –£–î–ê–õ–ï–ù–ò–ï –ï–ñ–ï–î–ù–ï–í–ù–û–ô –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò")
    print("="*60)
    
    plist_file = "com.daily.sync.tinkoff.supabase.plist"
    launch_agents_dir = os.path.expanduser("~/Library/LaunchAgents")
    target_path = os.path.join(launch_agents_dir, plist_file)
    
    try:
        # –í—ã–≥—Ä—É–∂–∞–µ–º LaunchAgent
        subprocess.run(["launchctl", "unload", target_path], check=True)
        print("‚úÖ LaunchAgent –≤—ã–≥—Ä—É–∂–µ–Ω")
        
        # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª
        if os.path.exists(target_path):
            os.remove(target_path)
            print("‚úÖ –§–∞–π–ª —É–¥–∞–ª–µ–Ω")
        
        print("‚úÖ –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞")
        return True
        
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: {e}")
        return False


def check_status():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏"""
    print("üìä –°–¢–ê–¢–£–° –ï–ñ–ï–î–ù–ï–í–ù–û–ô –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò")
    print("="*60)
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º LaunchAgent
        result = subprocess.run(["launchctl", "list"], capture_output=True, text=True)
        if "com.daily.sync.tinkoff.supabase" in result.stdout:
            print("‚úÖ –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∞–∫—Ç–∏–≤–Ω–∞")
        else:
            print("‚ùå –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏
        log_files = [f for f in os.listdir(".") if f.startswith("daily_sync_") and f.endswith(".log")]
        if log_files:
            latest_log = max(log_files)
            print(f"üìã –ü–æ—Å–ª–µ–¥–Ω–∏–π –ª–æ–≥: {latest_log}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –ª–æ–≥–∞
            with open(latest_log, 'r', encoding='utf-8') as f:
                lines = f.readlines()
                if lines:
                    print("üìÑ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏:")
                    for line in lines[-5:]:
                        print(f"   {line.strip()}")
        else:
            print("üìã –õ–æ–≥ —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –ª–æ–≥–∏
        print("\nüîç –°–∏—Å—Ç–µ–º–Ω—ã–µ –ª–æ–≥–∏:")
        try:
            result = subprocess.run(["tail", "-5", "/tmp/daily-sync.out"], capture_output=True, text=True)
            if result.stdout:
                print("üì§ –ü–æ—Å–ª–µ–¥–Ω–∏–π –≤—ã–≤–æ–¥:")
                print(result.stdout)
        except:
            print("üì§ –ù–µ—Ç —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ª–æ–≥–æ–≤")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞: {e}")


def run_manual_sync():
    """–†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏"""
    print("üîÑ –†–£–ß–ù–û–ô –ó–ê–ü–£–°–ö –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò")
    print("="*60)
    
    try:
        result = subprocess.run([sys.executable, "daily_sync.py"], 
                              capture_output=True, text=True, encoding='utf-8')
        
        print("üì§ –í—ã–≤–æ–¥:")
        print(result.stdout)
        
        if result.stderr:
            print("‚ö†Ô∏è –û—à–∏–±–∫–∏:")
            print(result.stderr)
        
        if result.returncode == 0:
            print("‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        else:
            print(f"‚ùå –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π (–∫–æ–¥: {result.returncode})")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")


def show_schedule():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ"""
    print("üìÖ –†–ê–°–ü–ò–°–ê–ù–ò–ï –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò")
    print("="*60)
    print("üïò –ï–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 09:00")
    print("üìä –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –¢–∏–Ω—å–∫–æ—Ñ—Ñ")
    print("‚òÅÔ∏è –ó–∞–≥—Ä—É–∑–∫–∞ –≤ Yandex S3")
    print("üóÑÔ∏è –ó–∞–≥—Ä—É–∑–∫–∞ –≤ Supabase")
    print("üìã –°–æ–∑–¥–∞–Ω–∏–µ –ª–æ–≥ —Ñ–∞–π–ª–∞")
    print("="*60)
    print("üí° –î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ plist —Ñ–∞–π–ª")


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    if len(sys.argv) < 2:
        print("üîß –£–ü–†–ê–í–õ–ï–ù–ò–ï –ï–ñ–ï–î–ù–ï–í–ù–û–ô –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ï–ô")
        print("="*60)
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
        print("  python3 manage_sync.py install    - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é")
        print("  python3 manage_sync.py uninstall  - –£–¥–∞–ª–∏—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é")
        print("  python3 manage_sync.py status     - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å")
        print("  python3 manage_sync.py run        - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –≤—Ä—É—á–Ω—É—é")
        print("  python3 manage_sync.py schedule   - –ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
        return
    
    command = sys.argv[1].lower()
    
    if command == "install":
        install_daily_sync()
    elif command == "uninstall":
        uninstall_daily_sync()
    elif command == "status":
        check_status()
    elif command == "run":
        run_manual_sync()
    elif command == "schedule":
        show_schedule()
    else:
        print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {command}")


if __name__ == "__main__":
    main()
